{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scath\\\\OneDrive\\\\Documents\\\\SBU\\\\CSE 316\\\\HW\\\\Top5Lists_HW3\\\\Top5Lists_HW3\\\\client\\\\src\\\\components\\\\Top5Item.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store';\n/*\r\n    This React component represents a single item in our\r\n    Top 5 List, which can be edited or moved around.\r\n    \r\n    @author McKilla Gorilla\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Top5Item(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [draggedTo, setDraggedTo] = useState(0);\n  const [editActive, setEditActive] = useState(false);\n  const [text, setText] = useState(\"\");\n\n  function handleDragStart(event) {\n    event.dataTransfer.setData(\"item\", event.target.id);\n  }\n\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  function handleDragEnter(event) {\n    event.preventDefault();\n    setDraggedTo(true);\n  }\n\n  function handleDragLeave(event) {\n    event.preventDefault();\n    setDraggedTo(false);\n  }\n\n  function handleDrop(event) {\n    event.preventDefault();\n    let target = event.target;\n    let targetId = target.id;\n    targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n    let sourceId = event.dataTransfer.getData(\"item\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n    setDraggedTo(false); // UPDATE THE LIST\n\n    store.addMoveItemTransaction(sourceId, targetId);\n  } // EDITING AN ITEM\n\n\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    setText(props.text);\n    toggleEdit();\n  }\n\n  function toggleEdit() {\n    let newActive = !editActive;\n\n    if (newActive) {\n      store.setIsItemEditActive();\n    }\n\n    setEditActive(newActive);\n  }\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      let id = event.target.id.substring(\"list-\".length);\n      store.changeListName(id, text);\n      toggleEdit();\n    }\n  }\n\n  function handleUpdateText(event) {\n    if (event.target.value == \"\") {\n      setText(\" \");\n    } else {\n      setText(event.target.value);\n    }\n  }\n\n  let {\n    index\n  } = props;\n  let itemClass = \"top5-item\";\n\n  if (draggedTo) {\n    itemClass = \"top5-item-dragged-to\";\n  }\n\n  if (editActive) {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      id: 'item-' + (index + 1),\n      className: itemClass,\n      onKeyPress: handleKeyPress,\n      onChange: handleUpdateText,\n      draggable: \"true\",\n      defaultValue: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'item-' + (index + 1),\n      className: itemClass,\n      onDragStart: handleDragStart,\n      onDragOver: handleDragOver,\n      onDragEnter: handleDragEnter,\n      onDragLeave: handleDragLeave,\n      onDrop: handleDrop,\n      draggable: \"true\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        id: \"edit-item-\" + index + 1,\n        className: \"list-card-button\",\n        value: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), props.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Top5Item, \"YhrOSkSpOc6Dwwm/wJU5AXVf0IM=\");\n\n_c = Top5Item;\nexport default Top5Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Top5Item\");","map":{"version":3,"sources":["C:/Users/scath/OneDrive/Documents/SBU/CSE 316/HW/Top5Lists_HW3/Top5Lists_HW3/client/src/components/Top5Item.js"],"names":["React","useContext","useState","GlobalStoreContext","Top5Item","props","store","draggedTo","setDraggedTo","editActive","setEditActive","text","setText","handleDragStart","event","dataTransfer","setData","target","id","handleDragOver","preventDefault","handleDragEnter","handleDragLeave","handleDrop","targetId","substring","indexOf","sourceId","getData","addMoveItemTransaction","handleToggleEdit","stopPropagation","toggleEdit","newActive","setIsItemEditActive","handleKeyPress","code","length","changeListName","handleUpdateText","value","index","itemClass"],"mappings":"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","sourcesContent":["import { React, useContext, useState } from \"react\";\r\nimport { GlobalStoreContext } from '../store'\r\n/*\r\n    This React component represents a single item in our\r\n    Top 5 List, which can be edited or moved around.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction Top5Item(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [draggedTo, setDraggedTo] = useState(0);\r\n    const [editActive, setEditActive] = useState(false);\r\n    const [text, setText] = useState(\"\");\r\n\r\n    function handleDragStart(event) {\r\n        event.dataTransfer.setData(\"item\", event.target.id);\r\n    }\r\n\r\n    function handleDragOver(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleDragEnter(event) {\r\n        event.preventDefault();\r\n        setDraggedTo(true);\r\n    }\r\n\r\n    function handleDragLeave(event) {\r\n        event.preventDefault();\r\n        setDraggedTo(false);\r\n    }\r\n\r\n    function handleDrop(event) {\r\n        event.preventDefault();\r\n        let target = event.target;\r\n        let targetId = target.id;\r\n        targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\r\n        let sourceId = event.dataTransfer.getData(\"item\");\r\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\r\n        setDraggedTo(false);\r\n\r\n        // UPDATE THE LIST\r\n        store.addMoveItemTransaction(sourceId, targetId);\r\n    }\r\n    // EDITING AN ITEM\r\n    function handleToggleEdit(event) {\r\n        event.stopPropagation();\r\n        setText(props.text);\r\n        toggleEdit();\r\n    }\r\n\r\n    function toggleEdit() {\r\n        let newActive = !editActive;\r\n        if (newActive) {\r\n            store.setIsItemEditActive();\r\n        }\r\n        setEditActive(newActive);\r\n    }\r\n\r\n    function handleKeyPress(event) {\r\n        if (event.code === \"Enter\") {\r\n            let id = event.target.id.substring(\"list-\".length);\r\n            store.changeListName(id, text);\r\n            toggleEdit();\r\n        }\r\n    }\r\n\r\n    function handleUpdateText(event) {\r\n        if (event.target.value == \"\") {\r\n            setText(\" \");\r\n        }\r\n        else {\r\n            setText(event.target.value);\r\n        }\r\n    }\r\n\r\n    let { index } = props;\r\n    let itemClass = \"top5-item\";\r\n    if (draggedTo) {\r\n        itemClass = \"top5-item-dragged-to\";\r\n    }\r\n    if (editActive) {\r\n        return (\r\n            <input\r\n                id={'item-' + (index + 1)}\r\n                className={itemClass}\r\n                onKeyPress={handleKeyPress}\r\n                onChange={handleUpdateText}\r\n                draggable=\"true\"\r\n                defaultValue={props.text}\r\n            />)\r\n    }\r\n    else {\r\n        return (\r\n            <div\r\n                id={'item-' + (index + 1)}\r\n                className={itemClass}\r\n                onDragStart={handleDragStart}\r\n                onDragOver={handleDragOver}\r\n                onDragEnter={handleDragEnter}\r\n                onDragLeave={handleDragLeave}\r\n                onDrop={handleDrop}\r\n                draggable=\"true\"\r\n            >\r\n                <input\r\n                    type=\"button\"\r\n                    id={\"edit-item-\" + index + 1}\r\n                    className=\"list-card-button\"\r\n                    value={\"\\u270E\"}\r\n                />\r\n                {props.text}\r\n            </div>)\r\n    }\r\n\r\n}\r\n\r\nexport default Top5Item;"]},"metadata":{},"sourceType":"module"}